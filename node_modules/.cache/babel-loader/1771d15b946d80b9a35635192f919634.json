{"ast":null,"code":"var _jsxFileName = \"/home/dd/Projects/hw-week-4-aysegulkavakli/src/main/AddStatusForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"./AxiosClient\";\nimport { Box, Button, Input, Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddStatusForm(_ref) {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [status, setStatus] = useState({\n    title: \"\",\n    categoryId: \"\",\n    color: \"\"\n  });\n  const [statusData, setStatusData] = useState();\n  const categoryId = category === null || category === void 0 ? void 0 : category.id;\n\n  const handleChange = e => {\n    const newData = { ...status\n    };\n    newData[e.currentTarget.name] = e.currentTarget.value;\n    setStatus(newData);\n  };\n\n  function addStatus() {\n    AxiosInstance.post(`/status`, {\n      title: status.title,\n      color: status.color,\n      categoryId: categoryId\n    }).then(function () {\n      getStatusList();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function getStatusList() {\n    AxiosInstance.get('/status', {\n      params: {\n        categoryId: category.id\n      }\n    }).then(function (response) {\n      setStatusData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function deleteStatus(id) {\n    AxiosInstance.delete(`status/${id}`).then(function () {\n      getStatusList();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function updateStatus(id) {\n    AxiosInstance.put(`status/${id}`).then(function () {\n      getStatusList();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    getStatusList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    p: 3,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Status name\",\n      name: \"title\",\n      value: status.title,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Status color\",\n      name: \"color\",\n      value: status.color,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => addStatus(),\n      children: \"Add Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), statusData && statusData.map(s => /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      display: \"flex\",\n      alignItems: \"center\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: s.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteStatus(s.id),\n        children: \"Sil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateStatus(s.id),\n        children: \"D\\xFCzenle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddStatusForm, \"9MNHCJ6iZDRJh6o+9PsewUBihLE=\");\n\n_c = AddStatusForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStatusForm\");","map":{"version":3,"sources":["/home/dd/Projects/hw-week-4-aysegulkavakli/src/main/AddStatusForm.tsx"],"names":["React","useEffect","useState","AxiosInstance","Box","Button","Input","Stack","AddStatusForm","category","status","setStatus","title","categoryId","color","statusData","setStatusData","id","handleChange","e","newData","currentTarget","name","value","addStatus","post","then","getStatusList","catch","error","console","log","get","params","response","data","deleteStatus","delete","updateStatus","put","map","s"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {AxiosInstance} from \"./AxiosClient\";\nimport {Box, Button, Input, Stack} from \"@mui/material\";\n\ninterface Status {\n    title: string;\n    categoryId: string;\n    color: string;\n}\n\ninterface Props {\n    category?: any;\n}\n\nexport default function AddStatusForm({category}: Props) {\n    const [status, setStatus] = useState<Status>({title: \"\", categoryId: \"\", color: \"\"});\n    const [statusData, setStatusData] = useState<any>();\n\n    const categoryId=category?.id;\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newData = {...status}\n        newData[e.currentTarget.name as keyof Status] = e.currentTarget.value\n        setStatus(newData)\n    }\n\n    function addStatus() {\n        AxiosInstance.post(`/status`,\n            {title:status.title, color:status.color, categoryId:categoryId},\n        )\n            .then(function () {\n                getStatusList();\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function getStatusList() {\n        AxiosInstance.get('/status',\n            { params: { categoryId: category.id } })\n            .then(function (response) {\n                setStatusData(response.data)\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    function deleteStatus(id:string) {\n        AxiosInstance.delete(`status/${id}`,\n        )\n            .then(function () {\n                getStatusList();\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function updateStatus(id:string) {\n        AxiosInstance.put(`status/${id}`,\n        )\n            .then(function () {\n                getStatusList();\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    useEffect(() => {\n        getStatusList();\n    }, [])\n\n    return (\n        <Stack direction=\"column\" p={3} spacing={2}>\n            <Input placeholder=\"Status name\" name=\"title\" value={status.title} onChange={handleChange}/>\n            <Input placeholder=\"Status color\" name=\"color\" value={status.color} onChange={handleChange}/>\n            <Button variant=\"contained\" onClick={() => addStatus()}>Add Status</Button>\n            {statusData && statusData.map((s: any) => (\n                <Stack direction=\"row\" display=\"flex\" alignItems=\"center\" spacing={3}>\n                    <Box>\n                        {s.title}\n                    </Box>\n                    <Button onClick={()=>deleteStatus(s.id)}>Sil</Button>\n                    <Button onClick={()=>updateStatus(s.id)}>Düzenle</Button>\n                </Stack>\n            ))\n            }\n        </Stack>\n    )\n}"]},"metadata":{},"sourceType":"module"}