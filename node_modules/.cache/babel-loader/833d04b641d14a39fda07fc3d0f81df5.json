{"ast":null,"code":"var _jsxFileName = \"/home/dd/Projects/hw-week-4-aysegulkavakli/src/main/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, FormControl, Input, InputLabel, MenuItem, Select, Stack } from \"@mui/material\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport AddCategoryForm from \"./AddCategoryForm\";\nimport { AxiosInstance } from \"./AxiosClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [selectedCategoryId, setSelectedCategoryId] = useState(\"\");\n  const [selectedStatusId, setSelectedStatusId] = useState(\"\");\n  const [todoTitle, setTodoTitle] = useState(\"\");\n  const [statusUpdate, setStatusUpdate] = useState(\"\");\n  const [categoryList, setCategoryList] = useState([]);\n  const [statusList, setStatusList] = useState([]);\n  const [todoList, setTodoList] = useState([]);\n\n  function getStatusList() {\n    AxiosInstance.get('/status', {\n      params: {\n        categoryId: selectedCategoryId\n      }\n    }).then(function (response) {\n      setStatusList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function getCategoryList() {\n    AxiosInstance.get('/category').then(function (response) {\n      setCategoryList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function getTodoList() {\n    AxiosInstance.get('/todo').then(function (response) {\n      setTodoList(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function addTodo() {\n    AxiosInstance.post('/todo', {\n      title: todoTitle,\n      categoryId: selectedCategoryId,\n      statusId: selectedStatusId\n    }).then(function (response) {}).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function updateTodo() {\n    AxiosInstance.post('/todo', {\n      title: todoTitle,\n      categoryId: selectedCategoryId,\n      statusId: selectedStatusId\n    }).then(function (response) {}).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    getCategoryList();\n  }, []);\n  useEffect(() => {\n    getTodoList();\n  }, [todoTitle]);\n  useEffect(() => {\n    getStatusList();\n  }, [selectedCategoryId]);\n\n  const handleChangeCategory = event => {\n    setSelectedCategoryId(event.target.value);\n  };\n\n  const handleChangeStatus = event => {\n    setSelectedStatusId(event.target.value);\n  };\n\n  const handleAddTodoTitle = event => {\n    setTodoTitle(event.target.value);\n  };\n\n  const handleUpdateStatus = event => {\n    setStatusUpdate(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Filter will come\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Description\",\n        value: todoTitle,\n        onChange: handleAddTodoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-helper-label\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: selectedCategoryId,\n          label: \"Category\",\n          onChange: handleChangeCategory,\n          children: categoryList.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: category.id,\n            children: category.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-helper-label\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: selectedStatusId,\n          label: \"Status\",\n          onChange: handleChangeStatus,\n          children: statusList.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: status.id,\n            children: status.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => addTodo(),\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), todoList.length > 0 && todoList.map(todo => /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: todo.categoryId.toString(),\n        label: \"Status\",\n        onChange: handleChangeCategory,\n        children: categoryList.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: category.id,\n          children: category.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: todo.statusId.toString(),\n        label: \"Status\",\n        onChange: handleChangeStatus,\n        children: statusList.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: status.id,\n          children: status.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          minWidth: 100\n        },\n        onClick: () => setOpen(true),\n        children: \"Kategorileri D\\xFCzenle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDrawer, {\n      open: open,\n      setOpen: setOpen,\n      children: /*#__PURE__*/_jsxDEV(AddCategoryForm, {\n        categoryList: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"X5ekGsWwUyDhGp5DEyTKMPzRF44=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/dd/Projects/hw-week-4-aysegulkavakli/src/main/TodoList.tsx"],"names":["React","useEffect","useState","Box","Button","FormControl","Input","InputLabel","MenuItem","Select","Stack","CustomDrawer","AddCategoryForm","AxiosInstance","TodoList","open","setOpen","selectedCategoryId","setSelectedCategoryId","selectedStatusId","setSelectedStatusId","todoTitle","setTodoTitle","statusUpdate","setStatusUpdate","categoryList","setCategoryList","statusList","setStatusList","todoList","setTodoList","getStatusList","get","params","categoryId","then","response","data","catch","error","console","log","getCategoryList","getTodoList","addTodo","post","title","statusId","updateTodo","handleChangeCategory","event","target","value","handleChangeStatus","handleAddTodoTitle","handleUpdateStatus","minWidth","map","category","id","status","length","todo","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,WAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,QANJ,EAOIC,MAPJ,EASIC,KATJ,QAUO,eAVP;AAWA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,aAAR,QAA4B,eAA5B;;AAKA,eAAgB,SAASC,QAAT,GAAmB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM,CAACe,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAS,EAAT,CAA5D;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAS,EAAT,CAAxD;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAS,EAAT,CAAhD;AAEA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAa,EAAb,CAAhD;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAW,EAAX,CAA5C;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAS,EAAT,CAAxC;;AAGA,WAAS6B,aAAT,GAAyB;AACrBlB,IAAAA,aAAa,CAACmB,GAAd,CAAkB,SAAlB,EACI;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,UAAU,EAAEjB;AAAd;AAAV,KADJ,EAEKkB,IAFL,CAEU,UAAUC,QAAV,EAAoB;AACtBR,MAAAA,aAAa,CAACQ,QAAQ,CAACC,IAAV,CAAb;AAEH,KALL,EAMKC,KANL,CAMW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KARL;AASH;;AAED,WAASG,eAAT,GAA2B;AACvB7B,IAAAA,aAAa,CAACmB,GAAd,CAAkB,WAAlB,EAEKG,IAFL,CAEU,UAAUC,QAAV,EAAoB;AACtBV,MAAAA,eAAe,CAACU,QAAQ,CAACC,IAAV,CAAf;AACH,KAJL,EAKKC,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AAQH;;AACD,WAASI,WAAT,GAAuB;AACnB9B,IAAAA,aAAa,CAACmB,GAAd,CAAkB,OAAlB,EAEKG,IAFL,CAEU,UAAUC,QAAV,EAAoB;AACtBN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAV,CAAX;AACH,KAJL,EAKKC,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AAQH;;AAED,WAASK,OAAT,GAAmB;AACf/B,IAAAA,aAAa,CAACgC,IAAd,CAAmB,OAAnB,EACK;AAACC,MAAAA,KAAK,EAAEzB,SAAR;AAAmBa,MAAAA,UAAU,EAAEjB,kBAA/B;AAAmD8B,MAAAA,QAAQ,EAAE5B;AAA7D,KADL,EAGKgB,IAHL,CAGU,UAAUC,QAAV,EAAoB,CACzB,CAJL,EAKKE,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AAQH;;AAED,WAASS,UAAT,GAAsB;AAClBnC,IAAAA,aAAa,CAACgC,IAAd,CAAmB,OAAnB,EACI;AAACC,MAAAA,KAAK,EAAEzB,SAAR;AAAmBa,MAAAA,UAAU,EAAEjB,kBAA/B;AAAmD8B,MAAAA,QAAQ,EAAE5B;AAA7D,KADJ,EAGKgB,IAHL,CAGU,UAAUC,QAAV,EAAoB,CACzB,CAJL,EAKKE,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAPL;AAQH;;AACDtC,EAAAA,SAAS,CAAC,MAAM;AACZyC,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIAzC,EAAAA,SAAS,CAAC,MAAM;AACZ0C,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACtB,SAAD,CAFM,CAAT;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACd,kBAAD,CAFM,CAAT;;AAIA,QAAMgC,oBAAoB,GAAIC,KAAD,IAA8B;AACvDhC,IAAAA,qBAAqB,CAACgC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB;AACH,GAFD;;AAGA,QAAMC,kBAAkB,GAAIH,KAAD,IAA8B;AACrD9B,IAAAA,mBAAmB,CAAC8B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACH,GAFD;;AAGA,QAAME,kBAAkB,GAAIJ,KAAD,IAA0C;AACjE5B,IAAAA,YAAY,CAAC4B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAGA,QAAMG,kBAAkB,GAAIL,KAAD,IAA8B;AACrD1B,IAAAA,eAAe,CAAC0B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,OAAO,EAAE,CAAhC;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC,aAAnB;AAAiC,QAAA,KAAK,EAAE/B,SAAxC;AAAmD,QAAA,QAAQ,EAAEiC;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAGE,UAAAA,QAAQ,EAAE;AAAb,SAAjB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,0BADZ;AAEI,UAAA,EAAE,EAAC,oBAFP;AAGI,UAAA,KAAK,EAAEvC,kBAHX;AAII,UAAA,KAAK,EAAC,UAJV;AAKI,UAAA,QAAQ,EAAEgC,oBALd;AAAA,oBAOKxB,YAAY,CAACgC,GAAb,CAAkBC,QAAD,iBACd,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,QAAQ,CAACC,EAA1B;AAAA,sBAA+BD,QAAQ,CAACZ;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADH;AAPL;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAkBI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAGU,UAAAA,QAAQ,EAAE;AAAb,SAAjB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,0BADZ;AAEI,UAAA,EAAE,EAAC,oBAFP;AAGI,UAAA,KAAK,EAAErC,gBAHX;AAII,UAAA,KAAK,EAAC,QAJV;AAKI,UAAA,QAAQ,EAAEkC,kBALd;AAAA,oBAOK1B,UAAU,CAAC8B,GAAX,CAAgBG,MAAD,iBACZ,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,MAAM,CAACD,EAAxB;AAAA,sBAA6BC,MAAM,CAACd;AAApC;AAAA;AAAA;AAAA;AAAA,kBADH;AAPL;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAgCI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,MAAKF,OAAO,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAsCKf,QAAQ,CAACgC,MAAT,GAAgB,CAAhB,IAAqBhC,QAAQ,CAAC4B,GAAT,CAAcK,IAAD,iBAC/B,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAA,8BACI,QAAC,GAAD;AAAA,kBACKA,IAAI,CAAChB;AADV;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAGgB,IAAI,CAAC5B,UAAN,CAAkB6B,QAAlB,EAHX;AAII,QAAA,KAAK,EAAC,QAJV;AAKI,QAAA,QAAQ,EAAEd,oBALd;AAAA,kBAOKxB,YAAY,CAACgC,GAAb,CAAkBC,QAAD,iBACd,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,QAAQ,CAACC,EAA1B;AAAA,oBAA+BD,QAAQ,CAACZ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADH;AAPL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAeI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAGgB,IAAI,CAACf,QAAN,CAAgBgB,QAAhB,EAHX;AAII,QAAA,KAAK,EAAC,QAJV;AAKI,QAAA,QAAQ,EAAEV,kBALd;AAAA,kBAOK1B,UAAU,CAAC8B,GAAX,CAAgBG,MAAD,iBACZ,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,MAAM,CAACD,EAAxB;AAAA,oBAA6BC,MAAM,CAACd;AAApC;AAAA;AAAA;AAAA;AAAA,gBADH;AAPL;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,CAtC1B,eAoEI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,OAAO,EAAC,MAA/B;AAAsC,MAAA,cAAc,EAAC,YAArD;AAAkE,MAAA,EAAE,EAAE,CAAtE;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAE;AAACU,UAAAA,QAAQ,EAAC;AAAV,SAAhC;AAAgD,QAAA,OAAO,EAAE,MAAIxC,OAAO,CAAC,IAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApEJ,eAuEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AAA0B,MAAA,OAAO,EAAEC,OAAnC;AAA6C,MAAA,QAAQ,eAAE,QAAC,eAAD;AAAiB,QAAA,YAAY,EAAES;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,YAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2EH;;GAxKwBX,Q;;KAAAA,Q","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    FormControl,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    SelectChangeEvent,\n    Stack,\n} from \"@mui/material\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport AddCategoryForm from \"./AddCategoryForm\";\nimport {AxiosInstance} from \"./AxiosClient\";\nimport {Category} from \"./models/Category\";\nimport {Status} from \"./models/Status\";\nimport {Todo} from \"./models/Todo\";\n\nexport default  function TodoList(){\n    const [open, setOpen] = useState(false);\n\n    const [selectedCategoryId, setSelectedCategoryId] = useState<string>(\"\");\n    const [selectedStatusId, setSelectedStatusId] = useState<string>(\"\");\n    const [todoTitle, setTodoTitle] = useState<string>(\"\");\n    const [statusUpdate, setStatusUpdate] = useState<string>(\"\");\n\n    const [categoryList, setCategoryList] = useState<Category[]>([]);\n    const [statusList, setStatusList] = useState<Status[]>([]);\n    const [todoList, setTodoList] = useState<Todo[]>([]);\n\n\n    function getStatusList() {\n        AxiosInstance.get('/status',\n            { params: { categoryId: selectedCategoryId } })\n            .then(function (response) {\n                setStatusList(response.data)\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function getCategoryList() {\n        AxiosInstance.get('/category',\n        )\n            .then(function (response) {\n                setCategoryList(response.data)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    function getTodoList() {\n        AxiosInstance.get('/todo',\n        )\n            .then(function (response) {\n                setTodoList(response.data)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function addTodo() {\n        AxiosInstance.post('/todo',\n             {title: todoTitle, categoryId: selectedCategoryId, statusId: selectedStatusId}\n        )\n            .then(function (response) {\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function updateTodo() {\n        AxiosInstance.post('/todo',\n            {title: todoTitle, categoryId: selectedCategoryId, statusId: selectedStatusId}\n        )\n            .then(function (response) {\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    useEffect(() => {\n        getCategoryList();\n    }, [])\n\n    useEffect(() => {\n        getTodoList();\n    }, [todoTitle])\n\n\n    useEffect(() => {\n        getStatusList();\n    }, [selectedCategoryId])\n\n    const handleChangeCategory = (event: SelectChangeEvent) => {\n        setSelectedCategoryId(event.target.value as string);\n    };\n    const handleChangeStatus = (event: SelectChangeEvent) => {\n        setSelectedStatusId(event.target.value as string);\n    };\n    const handleAddTodoTitle = (event: ChangeEvent<HTMLInputElement>) => {\n        setTodoTitle(event.target.value as string);\n    };\n    const handleUpdateStatus = (event: SelectChangeEvent) => {\n        setStatusUpdate(event.target.value as string);\n    };\n\n    return(\n        <Stack direction=\"column\">\n            <div>Filter will come</div>\n            <Stack direction=\"row\" spacing={2}>\n                <Input placeholder=\"Description\" value={todoTitle} onChange={handleAddTodoTitle}/>\n\n                <FormControl sx={{  minWidth: 120 }}>\n                    <InputLabel id=\"demo-simple-select-helper-label\">Category</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={selectedCategoryId}\n                    label=\"Category\"\n                    onChange={handleChangeCategory}\n                >\n                    {categoryList.map((category)=> (\n                        <MenuItem value={category.id}>{category.title}</MenuItem>)\n                    )}\n\n                </Select>\n            </FormControl>\n                <FormControl sx={{  minWidth: 120 }}>\n                    <InputLabel id=\"demo-simple-select-helper-label\">Status</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={selectedStatusId}\n                    label=\"Status\"\n                    onChange={handleChangeStatus}\n                >\n                    {statusList.map((status)=> (\n                        <MenuItem value={status.id}>{status.title}</MenuItem>)\n                    )}\n                </Select>\n                </FormControl>\n                <Button variant=\"contained\" onClick={()=> addTodo()}>\n                    Ekle\n                </Button>\n            </Stack>\n            {todoList.length>0 && todoList.map((todo)=> (\n                <Stack direction=\"row\">\n                    <Box>\n                        {todo.title}\n                    </Box>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={(todo.categoryId).toString()}\n                        label=\"Status\"\n                        onChange={handleChangeCategory}\n                    >\n                        {categoryList.map((category)=> (\n                            <MenuItem value={category.id}>{category.title}</MenuItem>)\n                        )}\n                    </Select>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={(todo.statusId).toString()}\n                        label=\"Status\"\n                        onChange={handleChangeStatus}\n                    >\n                        {statusList.map((status)=> (\n                            <MenuItem value={status.id}>{status.title}</MenuItem>)\n                        )}\n                    </Select>\n                </Stack>\n            ))}\n\n            <Stack direction=\"row\" display=\"flex\" justifyContent=\"flex-start\" mt={2}>\n                <Button variant=\"contained\" sx={{minWidth:100}} onClick={()=>setOpen(true)}>Kategorileri Düzenle</Button>\n            </Stack>\n            <CustomDrawer open={open} setOpen={setOpen}  children={<AddCategoryForm categoryList={categoryList}/>}/>\n        </Stack>\n    )\n}"]},"metadata":{},"sourceType":"module"}